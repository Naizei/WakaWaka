# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and Upload Binaries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.18, 1.19]
        os: [linux, windows, macos]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies for arm64
        if: matrix.goarch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }}
          GOARCH=${{ matrix.goarch }}
          OUTPUT_NAME=waka-nightly-${GOOS}-${GOARCH}
          if [ "$GOOS" == "windows" ]; then
            OUTPUT_NAME=${OUTPUT_NAME}.exe
          fi
          if [ "$GOARCH" == "arm64" ]; then
            CC=aarch64-linux-gnu-gcc
          else
            CC=gcc
          fi
          echo "Building for $GOOS/$GOARCH with CC=$CC"
          env CGO_ENABLED=1 CC=$CC GOOS=$GOOS GOARCH=$GOARCH go build -o dist/${OUTPUT_NAME}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: myapp-${{ matrix.os }}-${{ matrix.goarch }}-${{ matrix.go-version }}
          path: dist/
